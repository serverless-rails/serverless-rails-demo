---
name: Release
on: { push: { branches: ['main'] } }

jobs:
  release:
    name: Release
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Prepare variables
        id: prep
        run: echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile serverless-rails-demo
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile serverless-rails-demo
          aws configure set region ca-central-1 --profile serverless-rails-demo

      - name: Report deployment starting
        run: |
          aws sns publish \
            --region ca-central-1 \
            --profile serverless-rails-demo \
            --topic-arn arn:aws:sns:ca-central-1:251607137390:sr-production-alerts \
            --message "{\"Deployment\": \"production\", \"Status\": \"Started\", \"SHA\": \"${{ steps.prep.outputs.sha }}\", \"Link\": \"https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: sr-${{ github.sha }}
          restore-keys: |
            sr-

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ca-central-1
          AWS_PROFILE: serverless-rails-demo

      - name: Build container
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            RAILS_ENV=production
            REVISION=${{ steps.prep.outputs.sha }}
          tags: |
            723333431049.dkr.ecr.ca-central-1.amazonaws.com/production:${{ steps.prep.outputs.sha }}
            723333431049.dkr.ecr.ca-central-1.amazonaws.com/production:latest

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Deploy to production cluster
        run: ./bin/deploy production ${{ steps.prep.outputs.sha }}
        env:
          TF_WORKSPACE: production

      - name: Report deployment success
        if: ${{ success() }}
        run: |
          aws sns publish \
            --region ca-central-1 \
            --profile serverless-rails-demo \
            --topic-arn arn:aws:sns:ca-central-1:251607137390:sr-production-alerts \
            --message "{\"Deployment\": \"production\", \"Status\": \"Success\", \"SHA\": \"${{ steps.prep.outputs.sha }}\", \"Link\": \"https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}"

      - name: Report deployment failure
        if: ${{ failure() }}
        run: |
          aws sns publish \
            --region ca-central-1 \
            --profile serverless-rails-demo \
            --topic-arn arn:aws:sns:ca-central-1:251607137390:sr-production-alerts \
            --message "{\"Deployment\": \"production\", \"Status\": \"Failed\", \"SHA\": \"${{ steps.prep.outputs.sha }}\", \"Link\": \"https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}"
